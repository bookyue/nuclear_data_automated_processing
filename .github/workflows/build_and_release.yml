name: Release NUCtool

on:
  push:
    tags:
      - v*

jobs:

  Build-amd64:
    name: Build NUCTool on amd64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.9 ]

    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get tag
        id: tag
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install psycopg2 on macos
        if: matrix.os == 'macos-latest'
        run: |
          export LDFLAGS="-L/usr/local/opt/openssl/lib"
          export CPPFLAGS="-I/usr/local/opt/openssl/include"
          python -m pip install --upgrade pip setuptools wheel
          pip install psycopg2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build
        run: pyinstaller app.py --name nuctool --onefile

      - name: Copy config file to dist folder
        run: cp nuc_data_tool/config.toml dist/

      - name: Package
        run: tar -zcvf NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64.tar.gz dist/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64
          path: NUCtool-CLI-${{ steps.tag.outputs.tag }}-${{ runner.os }}-amd64.tar.gz

  Release:
    needs: Build-amd64
    runs-on: ubuntu-latest

    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get tag
        id: tag
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Download all release files
        uses: actions/download-artifact@v2
        with:
          path: releases/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: releases/**/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  PyPI:
    runs-on: ubuntu-latest

    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine
          pip install -r requirements.txt

          # If requirements.txt exists, install from it
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install the package from setup.py
          python3 setup.py install

      - name: Build and Check
        run: |
          python3 setup.py sdist bdist_wheel
          twine check dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
